generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "postgresql://neondb_owner:npg_ktJlaun28xBV@ep-royal-heart-adznzgp9-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
}

model User {
  id               String       @id @default(cuid())
  name             String
  email            String       @unique
  password         String
  role             String       
  department       String      
  emailPreference  Boolean      @default(true)
  poEmailPreference Boolean     @default(true)
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  amcContracts     AmcContract[]
  purchaseOrders   PurchaseOrder[]
  resetToken       String?
  resetTokenExpiry DateTime?

  @@map("users")
}

model AmcContract {
  id                String     @id @default(cuid())
  amcType           String
  make              String
  model             String
  serialNumber      String
  assetNumber       String     @unique
  warrantyStart     DateTime
  warrantyEnd       DateTime
  amcStart          DateTime
  amcEnd            DateTime
  location          String
  vendor            String
  department        String     
  ownerId           String
  owner             User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  @@map("amc_contracts")
}

model PurchaseOrder {
  id                String     @id @default(cuid())
  vendorCode        String
  vendorName        String
  vendorInfo        String
  poNumber          String     @unique
  poDate            DateTime
  validityStart     DateTime
  validityEnd       DateTime
  department        String     
  ownerId           String
  owner             User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  @@map("purchase_orders")
}


